#library "commonlib" // Name of the library
#include "zcommon.acs"

//#include "bcsutils.bcs"
// This line is optional and makes all BCSUtils functions
// usable without writing the "BCSUtils." prefix
//using BCSUtils; 
// Your project's error handler:
function void ACSUtilsErrorHandler(int type, int message)
{
	Log(s:"error: ", s:message);
	printbold(s:"error: ", s:message);
}
script 1 ENTER
{
} 
script "DelaySecond2" (void)
{
	printbold(s:" 1 ");
	Delay(35);
	printbold(s:" 2 ");
	SetActorState(0, "Main");
	
}
script "TSPGetGameSkill" (void)
{
    print(s:"Hello!");
  SetResultValue(GameSkill());
}
script "ExplodeZombie" (void)
{
    print(s:"Hello!");
    SetResultValue(GetCVar("explodey_zombies"));
	
}
script "ClassDrop" (void)
{
  Switch(PlayerClass(0))
  {
    case 0:
	SetActorPosition(0, GetActorX(0), GetActorY(0), (GetActorZ(0) - 12.0), 0);
	DropItem(0, "EngineerDrop");
    break;
  
    case 1:
	SetActorPosition(0, GetActorX(0), GetActorY(0), (GetActorZ(0) - 12.0), 0);
	DropItem(0, "DemolitionsDrop");
    break;
	
	default:
    break;
  }

}
script "ACS_ClassShellWeaponsDrop" (void)
{
  Switch(PlayerClass(0))
  {
    case 0:
	SetActorPosition(0, GetActorX(0), GetActorY(0), (GetActorZ(0) - 12.0), 0);
	DropItem(0, "EngineerShellWeapons");
    break;
  
    case 1:
	SetActorPosition(0, GetActorX(0), GetActorY(0), (GetActorZ(0) - 12.0), 0);
	DropItem(0, "StandardShellWeapons");
    break;
	
	default:
    break;
  }

}

script "ACS_ClassExplosiveWeaponsDrop" (void)
{
  Switch(PlayerClass(0))
  {
    case 0:
	SetActorPosition(0, GetActorX(0), GetActorY(0), (GetActorZ(0) - 12.0), 0);
	DropItem(0, "StandardExplosiveWeapons");
    break;
  
    case 1:
	SetActorPosition(0, GetActorX(0), GetActorY(0), (GetActorZ(0) - 12.0), 0);
	DropItem(0, "DemolitionsExplosiveWeapons");
    break;
	
	default:
    break;
  }
  }
	script "ACS_GetSpawnChance" (void)
	{
		int rand = (Random (0, 255));
		int cvar = GetCVar("SpawnChance");
		if (cvar > rand)
		{
			SetResultValue(1);
		}
		else
		{
			SetResultValue(0);
		}
	}
